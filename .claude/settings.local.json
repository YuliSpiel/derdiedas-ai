{
  "permissions": {
    "allow": [
      "Bash(git add src/dashboard/dashboard_app.py)",
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor: Simplify custom interest input in profile edit\n\n- Merged custom interest input into single multiselect\n- Allow direct text input with enter key in multiselect\n- Removed separate text input field for custom interests\n- Existing custom interests now appear in options list\n\nEOF\n)\")",
      "Bash(pip install streamlit-tags)",
      "Bash(git add src/dashboard/dashboard_app.py requirements.txt)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Add tag-based interest input with enter key support\n\n- Installed and integrated streamlit-tags library\n- Replaced multiselect with st_tags component\n- Users can now type and press enter to create interest tags\n- Suggestions from predefined list appear as autocomplete\n- Tags can be removed by clicking on them\n- Simplified profile edit form logic\n\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor: Revert to multiselect + text input for interests\n\n- Removed streamlit-tags dependency\n- Multiselect for predefined interest options\n- Separate text input for custom interests with enter key support\n- Custom interests auto-add on enter keypress via on_change handler\n- Display added custom interests below input field\n\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor: Revert to original interest input implementation\n\n- Multiselect for predefined interest options\n- Separate text input for custom interests (comma-separated)\n- Existing custom interests preserved in text field\n- Simpler form-based approach without session state complexity\n\nEOF\n)\")",
      "Bash(tree -L 2 -I '__pycache__|*.pyc|models_cache|outputs' src/)",
      "Bash(git add app.py pages/ .gitignore README.md requirements.txt)",
      "Bash(git rm run_dashboard.py run_level_test.py)",
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor: Migrate to Streamlit multipage app structure\n\n- Created main app.py as unified entry point with home page\n- Moved dashboard and level test to pages/ directory\n- Removed separate run_*.py launchers\n- Updated navigation to use sidebar instead of bottom buttons\n- Added python-dotenv for environment variable loading\n- Updated README.md with new structure and usage\n- Archived old run files\n\nBenefits:\n- Single app instance instead of multiple separate apps\n- Better UX with sidebar navigation\n- Reduced memory footprint\n- Industry-standard Streamlit multipage pattern\n- Cleaner project structure\n\nEOF\n)\")",
      "Bash(git add -A)",
      "Bash(git commit -m \"refactor: Rename page files to English-only names\n\n- Renamed 1_ðŸ“š_ëŒ€ì‹œë³´ë“œ.py to 1_dashboard.py\n- Renamed 2_ðŸ“Š_ë ˆë²¨í…ŒìŠ¤íŠ¸.py to 2_level_test.py\n- Updated README.md to reflect new filenames\n\")",
      "Bash(git commit -m \"refactor: Simplify app structure with auto-redirect\n\n- Changed app.py to simple entry point with auto-redirect\n- Dashboard is now the main home page\n- Removed page numbering (1_, 2_) for cleaner navigation\n- Updated README.md with new structure\n\nNavigation:\n- First visit: Redirects to dashboard\n- Existing users: Redirects to dashboard\n- Sidebar only shows: dashboard, level_test\n\")",
      "Bash(git commit -m \"feat: Remove sidebar navigation, add page buttons\n\n- Set sidebar to collapsed state in all pages\n- Added navigation button in dashboard to level test\n- Added back button in level test to return to dashboard\n- Cleaner UI without sidebar clutter\n\")",
      "Bash(git commit -m \"feat: Completely hide sidebar with CSS\n\n- Added CSS to hide sidebar completely: [data-testid=\"\"stSidebar\"\"] { display: none; }\n- Applied to both dashboard and level_test pages\n- Main content now uses full width\n- Cleaner, distraction-free UI\n\")",
      "Bash(git commit -m \"docs: Add MERLIN corpus citation and data attribution\n\n- Added comprehensive citation section in README.md\n- Included BibTeX citation for MERLIN corpus\n- Added citation in CEFR_Eval.py header and load_corpus method\n- Proper attribution to Boyd et al. (2014)\n- License information (CC BY-SA 4.0)\n- Dataset source URL\n\")",
      "Bash(git add README.md)",
      "Bash(git commit -m \"docs: Add complete data citations to README\n\n- Added MERLIN corpus citation with BibTeX format\n- Added Deutsch im Blick grammar resource citation\n- Included license information (CC BY-SA 4.0, CC BY 4.0)\n- Specified modifications made to original data\n- Proper academic attribution for both sources\n\")",
      "Bash(python src/utils/parse_grammar_content.py)",
      "Bash(pip install beautifulsoup4)",
      "Bash(cat data/grammar_content/grammar_summary.json)",
      "Bash(cat data/grammar_content/grammar_topics.json)",
      "Bash(git commit -m \"feat: Add grammar content parser and structured data\n\n- Created parse_grammar_content.py to parse HTML grammar pages\n- Automated CEFR level tagging (A1-C1)\n- Category classification (verbs, nouns, adjectives, etc.)\n- Tag extraction and difficulty scoring\n- Parsed 69 grammar topics from Deutsch im Blick\n- Generated grammar_topics.json with full structured data\n- Generated grammar_summary.json with statistics\n- Added beautifulsoup4 to requirements.txt\n\nStatistics:\n- 27 verb topics, 25 noun topics, 14 article topics\n- 42 A1 level, 17 A2 level, 10 B1 level\n- Includes content structure, examples, and tables\n\")"
    ],
    "deny": [],
    "ask": []
  }
}
